{"version":3,"sources":["components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.module.css","components/contactForm/ContactForm.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","evt","setState","target","value","onSubmit","preventDefault","props","handleSubmit","className","styled","component","form","this","title","input","type","onChange","pattern","required","add_contact","Component","ContactList","contacts","handleDelete","list","map","id","delete_contact","onClick","prototypes","PropTypes","arrayOf","shape","string","isRequired","func","Filter","filter","defaultProps","App","uuid","some","item","alert","newContact","prevState","contact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","formattedFilter","toLowerCase","trim","filteredContacts","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d548d35f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1M8ED\",\"delete_contact\":\"ContactList_delete_contact__2-6qF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1xnlY\",\"input\":\"Filter_input__2Q9g4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__1BJa1\",\"form\":\"ContactForm_form__WGlrA\",\"input\":\"ContactForm_input__q4Vsx\",\"add_contact\":\"ContactForm_add_contact__no1L8\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  };\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.handleSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={styled.component}>\r\n        <form className={styled.form} onSubmit={this.onSubmit}>\r\n          <label className={styled.title}>\r\n            Name\r\n            <input\r\n              className={styled.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label className={styled.title}>\r\n            Number\r\n            <input\r\n              className={styled.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={styled.add_contact} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts=[], handleDelete }) => {\r\n  return (\r\n    <ul className={styled.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}:{number}\r\n          </p>\r\n          <button\r\n            className={styled.delete_contact}\r\n            type=\"button\"\r\n            onClick={() => handleDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.prototypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport styled from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <label className={styled.title}>\r\n      Find contacts by name\r\n      <input\r\n        className={styled.input}\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  filter: \"\",\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: uuid(), name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: uuid(), name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: uuid(), name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: uuid(), name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    if (contacts) {\n      const parsedContacts = JSON.parse(contacts);\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleSubmit = (name, number) => {\n    const isDuplicate = this.state.contacts.some((item) => item.name === name);\n    if (isDuplicate) {\n      alert(\"Такой контакт уже существует \" + name);\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n\n    this.setState((prevState) => {\n      const newContacts = [newContact, ...prevState.contacts];\n      return { contacts: newContacts };\n    });\n  };\n\n  handleDelete = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const formattedFilter = filter.toLowerCase().trim();\n    const filteredContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(formattedFilter)\n    );\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        {contacts.length ? (\n          <>\n            <h2>Contacts</h2>\n            <Filter filter={filter} handleChange={this.handleChange} />\n            <ContactList\n              contacts={filteredContacts}\n              handleDelete={this.handleDelete}\n            />\n          </>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}